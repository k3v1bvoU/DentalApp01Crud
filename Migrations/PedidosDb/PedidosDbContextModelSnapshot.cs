// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dentalApp02.Models;

#nullable disable

namespace dentalApp02.Migrations.PedidosDb
{
    [DbContext(typeof(PedidosDbContext))]
    partial class PedidosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dentalApp02.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("dentalApp02.Models.Estado", b =>
                {
                    b.Property<int>("EstadoId")
                        .HasColumnType("int")
                        .HasColumnName("EstadoID");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoId");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("dentalApp02.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("ClienteID");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int")
                        .HasColumnName("EstadoID");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("dentalApp02.Models.PedidoHistorial", b =>
                {
                    b.Property<int>("HistorialId")
                        .HasColumnType("int")
                        .HasColumnName("HistorialID");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedByUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.HasKey("HistorialId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoHistorial", (string)null);
                });

            modelBuilder.Entity("dentalApp02.Models.Protesi", b =>
                {
                    b.Property<int>("ProtesisId")
                        .HasColumnType("int")
                        .HasColumnName("ProtesisID");

                    b.Property<string>("Modelo3D")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProtesisId");

                    b.ToTable("Protesis", (string)null);
                });

            modelBuilder.Entity("dentalApp02.Models.Tarea", b =>
                {
                    b.Property<int>("TareaId")
                        .HasColumnType("int")
                        .HasColumnName("TareaID");

                    b.Property<string>("AssignedToUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.HasKey("TareaId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("dentalApp02.Models.TareaHistorial", b =>
                {
                    b.Property<int>("HistorialId")
                        .HasColumnType("int")
                        .HasColumnName("HistorialID");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedByUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TareaId")
                        .HasColumnType("int")
                        .HasColumnName("TareaID");

                    b.HasKey("HistorialId");

                    b.HasIndex("TareaId");

                    b.ToTable("TareaHistorial", (string)null);
                });

            modelBuilder.Entity("dentalApp02.Models.Transaccione", b =>
                {
                    b.Property<int>("TransaccionId")
                        .HasColumnType("int")
                        .HasColumnName("TransaccionID");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int")
                        .HasColumnName("PedidoID");

                    b.HasKey("TransaccionId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("dentalApp02.Models.Pedido", b =>
                {
                    b.HasOne("dentalApp02.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("FK_Pedidos_Clientes");

                    b.HasOne("dentalApp02.Models.Estado", "Estado")
                        .WithMany("Pedidos")
                        .HasForeignKey("EstadoId")
                        .IsRequired()
                        .HasConstraintName("FK_Pedidos_Estados");

                    b.Navigation("Cliente");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("dentalApp02.Models.PedidoHistorial", b =>
                {
                    b.HasOne("dentalApp02.Models.Pedido", "Pedido")
                        .WithMany("PedidoHistorials")
                        .HasForeignKey("PedidoId")
                        .IsRequired()
                        .HasConstraintName("FK_PedidoHistorial_Pedidos");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("dentalApp02.Models.Tarea", b =>
                {
                    b.HasOne("dentalApp02.Models.Pedido", "Pedido")
                        .WithMany("Tareas")
                        .HasForeignKey("PedidoId")
                        .IsRequired()
                        .HasConstraintName("FK_Tareas_Pedidos");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("dentalApp02.Models.TareaHistorial", b =>
                {
                    b.HasOne("dentalApp02.Models.Tarea", "Tarea")
                        .WithMany("TareaHistorials")
                        .HasForeignKey("TareaId")
                        .IsRequired()
                        .HasConstraintName("FK_TareaHistorial_Tareas");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("dentalApp02.Models.Transaccione", b =>
                {
                    b.HasOne("dentalApp02.Models.Pedido", "Pedido")
                        .WithMany("Transacciones")
                        .HasForeignKey("PedidoId")
                        .IsRequired()
                        .HasConstraintName("FK_Transacciones_Pedidos");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("dentalApp02.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("dentalApp02.Models.Estado", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("dentalApp02.Models.Pedido", b =>
                {
                    b.Navigation("PedidoHistorials");

                    b.Navigation("Tareas");

                    b.Navigation("Transacciones");
                });

            modelBuilder.Entity("dentalApp02.Models.Tarea", b =>
                {
                    b.Navigation("TareaHistorials");
                });
#pragma warning restore 612, 618
        }
    }
}
